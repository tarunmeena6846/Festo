// schema.prisma

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}
model User {
  id          Int       @id @default(autoincrement())
  name        String?
  email       String?   @unique
  emailVerified DateTime?
  image       String?
  role        Role
  artists     Artist[]
  events      Event[]
  accounts    Account[]
  sessions    Session[]
}

model Artist {
  id          Int      @id @default(autoincrement())
  userId      Int
  user        User     @relation(fields: [userId], references: [id])
  profile     Profile?
  genre       String
  events      Event[]
}

model Event {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  date        DateTime
  location    String
  organiserId Int
  organiser   User     @relation(fields: [organiserId], references: [id])
  artists     Artist[]
}

model Profile {
  id          Int      @id @default(autoincrement())
  bio         String
  artistId    Int      @unique
  artist      Artist   @relation(fields: [artistId], references: [id])
}


model Account {
  id                Int       @id @default(autoincrement())
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           Int       @id @default(autoincrement())
  sessionToken String    @unique
  userId       Int
  expires      DateTime
  user         User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String    @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum Role {
  ARTIST
  ORGANISER
}
